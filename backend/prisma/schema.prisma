// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CUSTOMER
  BUSINESS_OWNER
}

enum OrderStatus {
  PREPARING
  PENDING
  DELIVERED
  REFUND
}

model Accounts {
  id              Int               @id @default(autoincrement())
  username        String            @unique
  password        String
  role            Role              @default(CUSTOMER)
  AccountsDetails AccountsDetails[]
}

model AccountsDetails {
  id          Int       @id @default(autoincrement())
  Accounts    Accounts? @relation(fields: [accountsId], references: [id])
  accountsId  Int
  email       String?
  description String?
  orders      Order[]
  createTime  DateTime  @default(now())
}

model Restaurant {
  id      Int     @id @default(autoincrement())
  name    String
  address String
  menu    Menu[]
  Order   Order[]
}

model Order {
  id                Int              @id @default(autoincrement())
  Restaurant        Restaurant?      @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  restaurantId      Int?
  AccountsDetails   AccountsDetails? @relation(fields: [accountsDetailsId], references: [id])
  accountsDetailsId Int?
  orderedMenu       OrderedMenu[]
  status            OrderStatus      @default(PREPARING)
  createTime        DateTime         @default(now())
}

model OrderedMenu {
  id      Int    @id @default(autoincrement())
  Order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?
  Menu    Menu?  @relation(fields: [menuId], references: [id])
  menuId  Int?
}

model Menu {
  id    Int     @id @default(autoincrement())
  name  String
  price Decimal

  Restaurant   Restaurant?   @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  OrderedMenu  OrderedMenu[]
  restaurantId Int?
  rating       Decimal
}
